package softwarecoding007;

public class SoftwareCoding007_practice004 {

	public static void main(String[] args) {
		String[] k34_OneRec = {
				" 자료생성년월, 사업장명, 사업자등록번호, 사업장가입상태코드 1 등록 2 탈퇴, 우편번호, 사업장지번상세주소, 사업장도로명상세주소, 고객법정동주소코드, 고객행정동주소코드, 법정동주소광역시도코드, 법정동주소광역시시군구코드, 법정동주소광역시시군구읍면동코드, 사업장형태구분코드 1 법인 2 개인, 사업장업종코드, 사업장업종코드명, 적용일자, 가입자수, 당월고지금액, 신규취득자수, 상실가입자수",
				"2022-03,(주)니프코코리아,211814,1,31409,충청남도 아산시 둔포면,충청남도 아산시 둔포면 아산밸리남로,4420036032,4420036032,44,200,360,1,252901,포장용 플라스틱 성형용기 제조업,1988-01-01,590,265736600,5,7",
				"2022-03,글로웨이 주식회사,110812,1,06072,서울특별시 강남구 청담동,서울특별시 강남구 영동대로137길,1168010400,1168056500,11,680,104,1,452101,미장  타일 및 방수 공사업,1988-01-01,3,1265560,0,0",
				"2022-03,신일기업(주),201810,1,04537,서울특별시 중구 충무로2가,서울특별시 중구 퇴계로,1114012500,1114055000,11,140,125,1,381002,,1988-01-01,19,6079800,0,0",
				"2022-03,디에스디엘(주),104811,1,04526,서울특별시 중구 남대문로4가,서울특별시 중구 세종대로,1114011700,1114054000,11,140,117,1,701201,비주거용 건물 임대업(점포  자기땅),1988-01-01,16,4105100,0,1",
				"2022-03,(주)헤럴드,104810,1,04336,서울특별시 용산구 후암동,서울특별시 용산구 후암로4길,1117010100,1117051000,11,170,101,1,221200,잡지 및 정기 간행물 발행업,1988-01-01,303,115263100,5,3",
				"2022-03,연합뉴스(주),102812,1,03143,서울특별시 종로구 수송동,서울특별시 종로구 율곡로2길,1111012400,1111061500,11,110,124,1,221200,잡지 및 정기 간행물 발행업,1988-01-01,849,378514300,9,10",
				"2022-03,협성해운(주),202814,1,04533,서울특별시 중구 을지로1가,서울특별시 중구 을지로,1114010400,1114055000,11,140,104,1,612000,내륙 수상 여객 및 화물 운송업,1988-01-0,,41,15096140,1,0",
				"2022-03,몬산토코리아 유한회사,214810,1,07335,서울특별시 영등포구 여의도동,서울특별시 영등포구 여의대로,1156011000,1156054000,11,560,110,1, ,,1988-01-0,,27,12200660,0,0",
				"2022-03,양양운수(주),113810,1,08507,서울특별시 금천구 가산동,서울특별시 금천구 가산디지털1로,1154510100,1154551000,11,545,101,1,602305,일반 화물 자동차 운송업,1988-01-01,18,4802820,0,0",
				"2022-03,(주)신도에스디알,120811,1,06179,서울특별시 강남구 대치동,서울특별시 강남구 테헤란로88길,1168010600,1168062000,11,680,106,1,515050,컴퓨터 및 주변장치  소프트웨어 도매업,1988-01-01,10,3025160,0,0"
				};
		
		String[] k34_fieldName = k34_OneRec[0].split(",");// 각 필드명을 k34_OneRec 배열의 0번째 인덱스 값에서 콤마를 빼고 가져온다.
		for (int k34_i = 1; k34_i < k34_OneRec.length; k34_i++) { // 필드명을 제외시켜야 하기 때문에 k34_i = 1부터 시작하고, k34_OneRec 배열의 길이에서 - 1을 뺀 만큼 반복한다.
			String[] k34_field = k34_OneRec[k34_i].split(",");// 콤마를 제외한 필드 값을 k34_field 배열에 저장한다.
			System.out.printf("******************************************\n");
			for (int k34_j = 0; k34_j < k34_fieldName.length; k34_j++) {// 출력을 위한 반복문으로, 필드명 배열의 길이만큼 반복한다.
				if (k34_j == 17) {
					k34_field[k34_j] = k34_readNum(k34_field[k34_j]);
				}
				System.out.printf(" %s : %s\n", k34_fieldName[k34_j], k34_field[k34_j]);// 필드명 : 필드 양식으로 출력한다.
			}
			System.out.printf("******************************************\n");
		}
	}
		
		static String k34_readNum(String k34_str) {
			String k34_numRead = "";// 읽은 숫자를 저장할 변수
			int k34_i, k34_j;// int변수 kopo34_i와 kopo34_j를 선언한다.
			String[] k34_unitS = { "영", "일", "이", "삼", "사", "오", "육", "칠", "팔", "구" };// 숫자를 읽기 위한 string 배열 kopo34_unitS를 선언하고 초기화한다.
			String[] k34_unitX = { "", "십", "백", "천", "만", "십", "백", "천", "억", "십" };// 자릿수를 읽기 위한 string 배열 kopo34_unitX를 선언하고 초기화한다.
			// 왼쪽부터 한개씩 처리
			k34_i = 0;// kopo34_i를 0으로 초기화한다.(숫자를 읽기 위한 인덱스로 활용)
			k34_j = k34_str.length() - 1;// kopo34_j를 kopo34_sNumVal 배열의 길이 - 1 의 값으로 초기화한다.(자릿수를 읽기 위한 인덱스로 활용)
			
			while (true) {// break문으로 빠져나오기 전까지 무한 반복하는 while문을 작성한다.
				if (k34_i >= k34_str.length()) {// 만약 kopo34_i가 배열의 길이와 같거나 커지면
					break;// while문을 빠져나온다.
				}
				
				if (k34_str.substring(k34_i, k34_i + 1).equals("0")) {// 만약 잘라낸 k34_str의 값이 0이라면
					if (k34_unitX[k34_j].equals("만") | k34_unitX[k34_j].equals("억")) {// 또 만약 자릿수가 "만"이거나 "억"이라면
						k34_numRead += "" + k34_unitX[k34_j];// 값이 0이기 때문에 k34_numRead에 자릿수만 붙여준다.
					} else {// 자릿수가 "만"이나 "억"이 아니라면 아무것도 하지 않는다. ("만"과 "억"만 숫자가 0이어도 자릿수를 붙여주기 때문)
						
					}
					
				} else {// 만약 잘라낸 k34_str의 값이 0이 아니라면
					k34_numRead +=
							k34_unitS[Integer.parseInt(k34_str.substring(k34_i, k34_i + 1))]// kopo34_i부터 kopo34_i + 1까지 배열의 값을 자른다. 즉, k34_i번의 인덱스 값만 가져온다.
																										    // 그리고 string을 integer로 변환해 숫자 -> 한글로 읽은 값을 가져와 k34_numRead에 추가한다.
							+ k34_unitX[k34_j]; // 자릿수를 읽은 값을 가져와 k34_numRead에 추가한다.
				}
				
				k34_i ++;// kopo34_i에 1을 더한다.(증감식)
				k34_j --;// kopo34_j에 1을 뺀다.(증감식)
			
			}
			return k34_numRead + "원";
		
	}
}
